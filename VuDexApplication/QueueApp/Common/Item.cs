///////////////////////////////////////////////////////////
//  Item.cs
//  Implementation of the Class Item
//  Generated by Enterprise Architect
//  Created on:      05-May-2019 22:35:11
//  Original author: vule9
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;


namespace QueueApp.Common
{
    [Serializable]
    public class Item
    {

        private bool active;
        private double destructivePower;
        private String name;
        private double quantity;

        public Item(bool active, double destructivePower, String name, double quantity)
        {

            if(name == null)
            {
                throw new ArgumentNullException("Parameters can not be null.");
            }

            if(destructivePower > Double.MaxValue || destructivePower < 0 || quantity > Double.MaxValue || quantity < 0)
            {
                throw new ArgumentOutOfRangeException($"Destructive power and quantity must be >= 0 and <={Double.MaxValue}");
            }

            if(name == "")
            {
                throw new ArgumentException("Name can not be empty.");
            }

            this.active = active;
            this.destructivePower = destructivePower;
            this.name = name;
            this.quantity = quantity;
        }
        public Item()
        {

        }
        ~Item()
        {

        }

        //id
        public int ItemId { get; set; }

        public bool Active
        {
            get
            {
                return active;
            }
            set
            {
                active = value;
            }
        }

        public double DestructivePower
        {
            get
            {
                return destructivePower;
            }
            set
            {
                destructivePower = value;
            }
        }

        public String Name
        {
            get
            {
                return name;
            }
            set
            {
                name = value;
            }
        }

        public double Quantity
        {
            get
            {
                return quantity;
            }
            set
            {
                quantity = value;
            }
        }

        public override string ToString()
        {
            String s = "";
            s += $"Active: ";

            if (Active)
            {
                s += "true\n";
            }
            else
            {
                s += "false\n";
            }

            s += $"Destructive power: {destructivePower}\n";
            s += $"Name: {Name}\n";
            s += $"Quantity: {Quantity}\n";


            return s;
        }

    }//end Item
}