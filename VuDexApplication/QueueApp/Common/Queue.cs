///////////////////////////////////////////////////////////
//  Queue.cs
//  Implementation of the Class Queue
//  Generated by Enterprise Architect
//  Created on:      05-May-2019 22:35:11
//  Original author: vule9
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Collections.Concurrent;

namespace QueueApp.Common
{
    public abstract class Queue
    {
        #region Fields
        private ConcurrentQueue<String> queueA;
        private ConcurrentQueue<String> queueB;
        private String title;
        #endregion

        #region Properties
        public ConcurrentQueue<String> QueueA
        {
            get
            {
                return queueA;
            }
            set
            {
                queueA = value;
            }
        }
        public ConcurrentQueue<String> QueueB
        {
            get
            {
                return queueB;
            }
            set
            {
                queueB = value;
            }
        }
        public String Title
        {
            get
            {
                return title;
            }
            set
            {
                title = value;
            }
        }
        #endregion

        public Queue(String title)
        {
            if (title == "")
                throw new ArgumentException("Naziv red ne moze biti prazan.");
            else if (title == null)
                throw new ArgumentNullException("Naziv red ne moze biti null.");

            Title = title;
            QueueA = new ConcurrentQueue<String>();
            QueueB = new ConcurrentQueue<String>();
        }

        ~Queue()
        {

        }
    }//end Queue
}